name: Terraform PR

on:
  pull_request:
    paths:
      - '**.tf'
      - '.github/workflows/pr-terraform.yml'
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  terraform-lint-and-validate:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      # Set up Terraform with the specified version
      - name: Setup Terraform
        id: setup-terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.7'

      # Run Terraform init
      - name: Terraform Init
        id: init
        run: terraform init

      # Run Terraform fmt to check the code formatting
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -no-color -recursive=true

      # Run Terraform validate to check the configuration for errors
      - name: Terraform Validate
        id: validate
        if: success() || failure()
        run: terraform validate -no-color

      # Set up TFLint with the specified version
      - name: Setup TFLint
        id: setup-tflint
        uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: v0.48.0

      # Display TFLint version
      - name: Show TFLint Version
        id: show-tflint-version
        run: tflint --version

      # Init TFLint
      - name: Init TFLint
        id: init-tflint
        run: tflint --init
        env:
          # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Run TFLint and capture the output
      - name: Run TFLint
        id: run-tflint
        run: |
          output=$(tflint -f compact)
          echo "::set-output name=result::${output}"

      # Add a comment to the PR with the result of the Terraform checks
      - name: Add Check Comment
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fmtOutcome = ${{ steps.fmt.outcome }};
            const initOutcome = ${{ steps.init.outcome }};
            const validateOutcome = ${{ steps.validate.outcome }};
            const tflintOutcome = ${{ steps.run-tflint.outcome }};
            const tflintOutput = ${{ steps.run-tflint.outputs.result }};

            const output = `
            #### Terraform Format and Style üñå\`${fmtOutcome}\`
            #### Terraform Initialization ‚öôÔ∏è\`${initOutcome}\`
            #### Terraform Validation ü§ñ\`${validateOutcome}\`
            #### TFLint Check üß™\`${tflintOutcome}\`

            <details><summary>Show TFLint Output</summary>

            \`\`\`
            ${tflintOutput}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
